!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/shadow/Shadonix/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(TARGET)	src/drmlist/Makefile	/^$(TARGET): $(OBJECTS)$/;"	t
$(TARGET)	src/fbset/Makefile	/^$(TARGET): $(OBJECTS)$/;"	t
$(TARGET)	src/init/Makefile	/^$(TARGET): $(OBJECTS)$/;"	t
$(TARGET)	src/lash/Makefile	/^$(TARGET): $(OBJECTS)$/;"	t
$(TARGET)	src/libdrm/Makefile	/^$(TARGET): $(OBJECTS)$/;"	t
$(TARGET)	src/libfb/Makefile	/^$(TARGET): $(OBJECTS)$/;"	t
$(TARGET)	src/libshado/Makefile	/^$(TARGET): $(OBJECTS)$/;"	t
$(TARGET)	src/print_args/Makefile	/^$(TARGET): $(OBJECTS)$/;"	t
%_c.o	src/base.mk	/^%_c.o: %.c$/;"	t
%_s.o	src/base.mk	/^%_s.o: %.S$/;"	t
BINDIR	src/base.mk	/^BINDIR ?= $(PREFIX)\/sbin$/;"	m
BINDIR	src/drmlist/Makefile	/^BINDIR = $(PREFIX)\/bin$/;"	m
BINDIR	src/fbset/Makefile	/^BINDIR = $(PREFIX)\/bin$/;"	m
BINDIR	src/lash/Makefile	/^BINDIR = $(PREFIX)\/bin$/;"	m
BINDIR	src/libdrm/Makefile	/^BINDIR = $(PREFIX)\/lib$/;"	m
BINDIR	src/libfb/Makefile	/^BINDIR = $(PREFIX)\/lib$/;"	m
BINDIR	src/libshado/Makefile	/^BINDIR = $(PREFIX)\/lib$/;"	m
BINDIR	src/print_args/Makefile	/^BINDIR = $(PREFIX)\/bin$/;"	m
CC	src/base.mk	/^CC ?= gcc$/;"	m
CSOURCES	src/drmlist/Makefile	/^CSOURCES=$(shell echo *.c)$/;"	m
CSOURCES	src/fbset/Makefile	/^CSOURCES=$(shell echo *.c)$/;"	m
CSOURCES	src/init/Makefile	/^CSOURCES=$(shell echo *.c)$/;"	m
CSOURCES	src/lash/Makefile	/^CSOURCES=$(shell echo *.c)$/;"	m
CSOURCES	src/libdrm/Makefile	/^CSOURCES = $(shell echo *.c)$/;"	m
CSOURCES	src/libfb/Makefile	/^CSOURCES = $(shell echo *.c)$/;"	m
CSOURCES	src/libshado/Makefile	/^CSOURCES = $(shell echo *.c)$/;"	m
CSOURCES	src/print_args/Makefile	/^CSOURCES=$(shell echo *.c)$/;"	m
DEBUG_MEM	src/libshado/mem.c	/^#define DEBUG_MEM /;"	d	file:
DESTDIR	src/base.mk	/^DESTDIR ?= \/home\/shadow\/Shadonix$/;"	m
DRM_MODE_CONNECTED	src/include/libdrm.h	/^    DRM_MODE_CONNECTED = 1,$/;"	e	enum:libdrm_modes
DRM_MODE_DISCONNECTED	src/include/libdrm.h	/^    DRM_MODE_DISCONNECTED = 2,$/;"	e	enum:libdrm_modes
DRM_MODE_UNKNOWN	src/include/libdrm.h	/^    DRM_MODE_UNKNOWN = 3,$/;"	e	enum:libdrm_modes
FB_ERR_GETINFO	src/include/libfb.h	/^#define FB_ERR_GETINFO /;"	d
FB_ERR_MMAP	src/include/libfb.h	/^#define FB_ERR_MMAP /;"	d
FB_ERR_NOFB0	src/include/libfb.h	/^#define FB_ERR_NOFB0 /;"	d
FB_ERR_PUTINFO	src/include/libfb.h	/^#define FB_ERR_PUTINFO /;"	d
FB_SUCCESS	src/include/libfb.h	/^#define FB_SUCCESS /;"	d
FLAGS	src/base.mk	/^FLAGS ?= -nostdlib -I..\/include -fno-stack-protector -fPIC$/;"	m
FLAG_MEM_ALLOCATED	src/libshado/mem.c	/^#define FLAG_MEM_ALLOCATED /;"	d	file:
FLAG_MEM_MAPPED	src/libshado/mem.c	/^#define FLAG_MEM_MAPPED /;"	d	file:
HEADER_FLAGS_MASK	src/libshado/mem.c	/^static uint32_t HEADER_FLAGS_MASK = 7; \/* 0111 *\/$/;"	v	typeref:typename:uint32_t	file:
HEADER_FULL_SIZE	src/libshado/mem.c	/^static const int HEADER_FULL_SIZE = HEADER_SIZE * 2;$/;"	v	typeref:typename:const int	file:
HEADER_SIZE	src/libshado/mem.c	/^static const int HEADER_SIZE = 4;$/;"	v	typeref:typename:const int	file:
HEADER_SIZE_MASK	src/libshado/mem.c	/^static uint32_t HEADER_SIZE_MASK = 0xFFFFFFF8;$/;"	v	typeref:typename:uint32_t	file:
LDFLAGS	src/drmlist/Makefile	/^LDFLAGS= -lshado -ldrm -L$(SHADONIX_PATH)\/lib$/;"	m
LDFLAGS	src/fbset/Makefile	/^LDFLAGS= -lshado -lfb -L$(SHADONIX_PATH)\/lib$/;"	m
LDFLAGS	src/init/Makefile	/^LDFLAGS= -lshado -lfb -L$(SHADONIX_PATH)\/lib$/;"	m
LDFLAGS	src/lash/Makefile	/^LDFLAGS= -lshado -L$(SHADONIX_PATH)\/lib$/;"	m
LDFLAGS	src/libdrm/Makefile	/^LDFLAGS = -shared$/;"	m
LDFLAGS	src/libfb/Makefile	/^LDFLAGS = -shared$/;"	m
LDFLAGS	src/libshado/Makefile	/^LDFLAGS = -shared$/;"	m
LDFLAGS	src/print_args/Makefile	/^LDFLAGS= -lshado -L$(SHADONIX_PATH)\/lib$/;"	m
MMAP_THRESHOLD	src/libshado/mem.c	/^static const int MMAP_THRESHOLD = 128*1024;$/;"	v	typeref:typename:const int	file:
OBJECTS	src/drmlist/Makefile	/^OBJECTS = $(CSOURCES:.c=_c.o)$/;"	m
OBJECTS	src/fbset/Makefile	/^OBJECTS = $(CSOURCES:.c=_c.o)$/;"	m
OBJECTS	src/init/Makefile	/^OBJECTS = $(CSOURCES:.c=_c.o)$/;"	m
OBJECTS	src/lash/Makefile	/^OBJECTS = $(CSOURCES:.c=_c.o)$/;"	m
OBJECTS	src/libdrm/Makefile	/^OBJECTS = $(CSOURCES:.c=_c.o)$/;"	m
OBJECTS	src/libfb/Makefile	/^OBJECTS = $(CSOURCES:.c=_c.o)$/;"	m
OBJECTS	src/libshado/Makefile	/^OBJECTS = $(CSOURCES:.c=_c.o)$/;"	m
OBJECTS	src/print_args/Makefile	/^OBJECTS = $(CSOURCES:.c=_c.o)$/;"	m
O_CLOEXEC	src/libdrm/libdrm.c	/^#define O_CLOEXEC /;"	d	file:
PAGE_SIZE	src/libshado/mem.c	/^static const int PAGE_SIZE = 4096;$/;"	v	typeref:typename:const int	file:
PAGE_SIZE	src/libshado/util.c	/^#define PAGE_SIZE /;"	d	file:
PREFIX	src/base.mk	/^PREFIX ?= $(DESTDIR)$/;"	m
PRINTF_LONG_SUPPORT	src/libshado/printf.c	/^#define PRINTF_LONG_SUPPORT /;"	d	file:
P_AS_U32	src/libshado/mem.c	/^#define P_AS_U32(/;"	d	file:
RESIZE_THRESHOLD	src/libshado/mem.c	/^static const int RESIZE_THRESHOLD = 16;$/;"	v	typeref:typename:const int	file:
SHADONIX_PATH	src/base.mk	/^SHADONIX_PATH ?= \/home\/shadow\/Shadonix$/;"	m
SHELL	src/base.mk	/^SHELL ?= \/bin\/sh$/;"	m
SSOURCES	src/libshado/Makefile	/^SSOURCES = $(shell echo *.S)$/;"	m
Shadonix	README.md	/^# Shadonix$/;"	c
TARGET	src/drmlist/Makefile	/^TARGET=drmlist$/;"	m
TARGET	src/fbset/Makefile	/^TARGET=fbset$/;"	m
TARGET	src/init/Makefile	/^TARGET=init$/;"	m
TARGET	src/lash/Makefile	/^TARGET=lash$/;"	m
TARGET	src/libdrm/Makefile	/^TARGET = libdrm.so$/;"	m
TARGET	src/libfb/Makefile	/^TARGET = libfb.so$/;"	m
TARGET	src/libshado/Makefile	/^TARGET = libshado.so$/;"	m
TARGET	src/print_args/Makefile	/^TARGET=print_args$/;"	m
__TFP_PRINTF__	src/include/printf.h	/^#define __TFP_PRINTF__$/;"	d
__errno_location	src/libshado/util.c	/^int *__errno_location () {$/;"	f	typeref:typename:int *
_exit	src/libshado/util.c	/^void _exit (int code) {$/;"	f	typeref:typename:void
_start	src/init/crt0.S	/^_start: # _start is the entry point known to the linker$/;"	l
_syscall	src/libshado/start.S	/^_syscall:$/;"	l
a2d	src/libshado/printf.c	/^static int a2d(char ch)$/;"	f	typeref:typename:int	file:
a2i	src/libshado/printf.c	/^static char a2i(char ch, char** src,int base,int* nump)$/;"	f	typeref:typename:char	file:
align_8	src/libshado/mem.c	/^static inline size_t align_8 (size_t size) {$/;"	f	typeref:typename:size_t	file:
all	src/drmlist/Makefile	/^all: $(TARGET)$/;"	t
all	src/fbset/Makefile	/^all: $(TARGET)$/;"	t
all	src/init/Makefile	/^all: $(TARGET)$/;"	t
all	src/lash/Makefile	/^all: $(TARGET)$/;"	t
all	src/libdrm/Makefile	/^all: $(TARGET)$/;"	t
all	src/libfb/Makefile	/^all: $(TARGET)$/;"	t
all	src/libshado/Makefile	/^all: $(TARGET)$/;"	t
all	src/print_args/Makefile	/^all: $(TARGET)$/;"	t
alloc_new_mem	src/libshado/mem.c	/^static uint8_t *alloc_new_mem (size_t in_size) {$/;"	f	typeref:typename:uint8_t *	file:
capability	src/include/libdrm.h	/^    uint64_t capability;$/;"	m	struct:libdrm_get_cap	typeref:typename:uint64_t
chunk_set_flags	src/libshado/mem.c	/^static inline uint8_t *chunk_set_flags (uint8_t *p, uint8_t flags) {$/;"	f	typeref:typename:uint8_t *	file:
chunk_set_size	src/libshado/mem.c	/^static inline uint8_t *chunk_set_size (uint8_t *p, size_t size) {$/;"	f	typeref:typename:uint8_t *	file:
chunk_size	src/libshado/mem.c	/^static inline uint32_t chunk_size (uint8_t *p) {$/;"	f	typeref:typename:uint32_t	file:
chunk_unset_flags	src/libshado/mem.c	/^static inline uint8_t *chunk_unset_flags (uint8_t *p, uint8_t flags) {$/;"	f	typeref:typename:uint8_t *	file:
clean	src/base.mk	/^clean:$/;"	t
cmd_to_args	src/lash/lash.c	/^char **cmd_to_args(char *cmd) {$/;"	f	typeref:typename:char **
code	src/lash/lash.c	/^    unsigned short code;$/;"	m	struct:input_event	typeref:typename:unsigned short	file:
console_fd	src/lash/lash.c	/^unsigned long console_fd = 0;$/;"	v	typeref:typename:unsigned long
console_open	src/lash/lash.c	/^void console_open () {$/;"	f	typeref:typename:void
console_read	src/lash/lash.c	/^char console_read () {$/;"	f	typeref:typename:char
console_write	src/lash/lash.c	/^void console_write (char c) {$/;"	f	typeref:typename:void
cur_brk	src/lash/lash.c	/^unsigned long cur_brk = 0;$/;"	v	typeref:typename:unsigned long
delay	src/libshado/util.c	/^void delay (int ticks) {$/;"	f	typeref:typename:void
errno_value	src/libshado/util.c	/^int errno_value = 0;$/;"	v	typeref:typename:int
event_file	src/lash/lash.c	/^struct event_file {$/;"	s	file:
event_list_head	src/lash/lash.c	/^struct event_file *event_list_head;$/;"	v	typeref:struct:event_file *
fb_get_buffer	src/libfb/fb.c	/^void *fb_get_buffer () {$/;"	f	typeref:typename:void *
fb_get_info	src/libfb/fb.c	/^int fb_get_info (struct fb_var_screeninfo *vi, struct fb_fix_screeninfo *fi) {$/;"	f	typeref:typename:int
fb_put_info	src/libfb/fb.c	/^int fb_put_info (struct fb_var_screeninfo *vi) {$/;"	f	typeref:typename:int
fd	src/lash/lash.c	/^    int fd;$/;"	m	struct:event_file	typeref:typename:int	file:
file_close	src/libshado/sys.c	/^int file_close (unsigned long fd) {$/;"	f	typeref:typename:int
file_ioctl	src/libshado/sys.c	/^int file_ioctl (unsigned long fd, unsigned long cmd, void *arg) {$/;"	f	typeref:typename:int
file_open	src/libshado/sys.c	/^unsigned long file_open (char *fn, int flags) {$/;"	f	typeref:typename:unsigned long
file_read	src/libshado/sys.c	/^unsigned long file_read (unsigned long fd, char *buff, unsigned long size) {$/;"	f	typeref:typename:unsigned long
file_stat	src/libshado/sys.c	/^int file_stat (const char *pathname, struct stat *statbuf) {$/;"	f	typeref:typename:int
file_write	src/libshado/sys.c	/^unsigned long file_write (unsigned long fd, char *buf, unsigned long len) {$/;"	f	typeref:typename:unsigned long
fill_fb	src/fbset/fbset.c	/^int fill_fb (void *pbuffer, struct fb_var_screeninfo *vi, struct fb_fix_screeninfo *fi, uint32_t/;"	f	typeref:typename:int
find_cmd	src/lash/lash.c	/^bool find_cmd (char *full_path) {$/;"	f	typeref:typename:bool
find_first_fit	src/libshado/mem.c	/^static uint8_t *find_first_fit (size_t size) {$/;"	f	typeref:typename:uint8_t *	file:
fix_color	src/init/init.c	/^uint32_t fix_color (uint32_t num) {$/;"	f	typeref:typename:uint32_t
free	src/libshado/mem.c	/^void free(void *up) {$/;"	f	typeref:typename:void
handle_event	src/lash/lash.c	/^bool handle_event (struct event_file *e, struct input_event *event) {$/;"	f	typeref:typename:bool
handle_events	src/lash/lash.c	/^void handle_events () {$/;"	f	typeref:typename:void
hex_str_to_ulong	src/libshado/util.c	/^unsigned long hex_str_to_ulong (char *s) {$/;"	f	typeref:typename:unsigned long
i2a	src/libshado/printf.c	/^static void i2a (int num, char * bf)$/;"	f	typeref:typename:void	file:
init_heap	src/libshado/mem.c	/^static void init_heap () {$/;"	f	typeref:typename:void	file:
init_printf	src/libshado/printf.c	/^void init_printf(void* putp,void (*putf) (void*,char))$/;"	f	typeref:typename:void
input_event	src/lash/lash.c	/^struct input_event {$/;"	s	file:
install	src/base.mk	/^install:$/;"	t
is_chunk_alloc	src/libshado/mem.c	/^static inline bool is_chunk_alloc (uint8_t *p) {$/;"	f	typeref:typename:bool	file:
is_chunk_free	src/libshado/mem.c	/^static inline bool is_chunk_free (uint8_t *p) {$/;"	f	typeref:typename:bool	file:
is_chunk_mapped	src/libshado/mem.c	/^static inline bool is_chunk_mapped (uint8_t *p) {$/;"	f	typeref:typename:bool	file:
li2a	src/libshado/printf.c	/^static void li2a (long num, char * bf)$/;"	f	typeref:typename:void	file:
libdrm_get_cap	src/include/libdrm.h	/^struct libdrm_get_cap {$/;"	s
libdrm_get_connector	src/libdrm/libdrm.c	/^int libdrm_get_connector (int fd, int id, struct drm_mode_get_connector *conn) {$/;"	f	typeref:typename:int
libdrm_get_resources	src/libdrm/libdrm.c	/^int libdrm_get_resources (int fd, struct drm_mode_card_res *res) {$/;"	f	typeref:typename:int
libdrm_ioctl	src/libdrm/libdrm.c	/^int libdrm_ioctl (int fd, unsigned long request, void *arg) {$/;"	f	typeref:typename:int
libdrm_modes	src/include/libdrm.h	/^enum libdrm_modes {$/;"	g
libdrm_open	src/libdrm/libdrm.c	/^int libdrm_open (const char *device_node) {$/;"	f	typeref:typename:int
line_read	src/lash/lash.c	/^int line_read (char *buf, int max) {$/;"	f	typeref:typename:int
load_event_devs	src/lash/lash.c	/^void load_event_devs () {$/;"	f	typeref:typename:void
main	src/drmlist/drmlist.c	/^int main (int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/fbset/fbset.c	/^int main (int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/init/init.c	/^int main () {$/;"	f	typeref:typename:int
main	src/lash/lash.c	/^int main () {$/;"	f	typeref:typename:int
main	src/print_args/print_args.c	/^int main (int argc, char **argv) {$/;"	f	typeref:typename:int
malloc	src/libshado/mem.c	/^void *malloc(size_t in_size) {$/;"	f	typeref:typename:void *
max_x	src/lash/lash.c	/^    int max_x;$/;"	m	struct:mouse_pos_info	typeref:typename:int	file:
max_y	src/lash/lash.c	/^    int max_y;$/;"	m	struct:mouse_pos_info	typeref:typename:int	file:
mem_alloc	src/libshado/util.c	/^void *mem_alloc (int size) {$/;"	f	typeref:typename:void *
mem_brk	src/libshado/sys.c	/^void *mem_brk (void *p) {$/;"	f	typeref:typename:void *
mem_cpy	src/libshado/util.c	/^void mem_cpy (void *dest, void *src, size_t size) {$/;"	f	typeref:typename:void
mem_mmap	src/libshado/sys.c	/^void *mem_mmap (void *addr, size_t length, int prot, int flags, int fd,$/;"	f	typeref:typename:void *
mem_munmap	src/libshado/sys.c	/^int mem_munmap (void *addr, size_t length) {$/;"	f	typeref:typename:int
mem_set	src/libshado/util.c	/^void mem_set (void *p, char n, size_t size) {$/;"	f	typeref:typename:void
mouse_pos	src/lash/lash.c	/^struct mouse_pos_info mouse_pos;$/;"	v	typeref:struct:mouse_pos_info
mouse_pos_info	src/lash/lash.c	/^struct mouse_pos_info {$/;"	s	file:
name	src/lash/lash.c	/^    char name[64];$/;"	m	struct:event_file	typeref:typename:char[64]	file:
next	src/lash/lash.c	/^    struct event_file *next;$/;"	m	struct:event_file	typeref:struct:event_file *	file:
next_chunk	src/libshado/mem.c	/^static inline uint8_t *next_chunk (uint8_t *p) {$/;"	f	typeref:typename:uint8_t *	file:
p_first_free	src/libshado/mem.c	/^static uint8_t *p_first_free = NULL;$/;"	v	typeref:typename:uint8_t *	file:
p_heap_end	src/libshado/mem.c	/^static uint8_t *p_heap_end = NULL;$/;"	v	typeref:typename:uint8_t *	file:
p_heap_start	src/libshado/mem.c	/^static uint8_t *p_heap_start = NULL;$/;"	v	typeref:typename:uint8_t *	file:
print_heap	src/libshado/mem.c	/^void print_heap () {$/;"	f	typeref:typename:void
printf	src/include/printf.h	/^#define printf /;"	d
printf_fd	src/libshado/printf.c	/^unsigned long printf_fd = 0;$/;"	v	typeref:typename:unsigned long
proc_cmd	src/lash/lash.c	/^bool proc_cmd (char *cmd) {$/;"	f	typeref:typename:bool
ps_execute	src/libshado/sys.c	/^int ps_execute (char *filename) {$/;"	f	typeref:typename:int
ps_execve	src/libshado/sys.c	/^long ps_execve (char *filename, char **argv, char **envp) {$/;"	f	typeref:typename:long
ps_fork	src/libshado/sys.c	/^long ps_fork () {$/;"	f	typeref:typename:long
putc_console	src/libshado/printf.c	/^void putc_console(void *p, char c) {$/;"	f	typeref:typename:void
putcf	src/libshado/printf.c	/^typedef void (*putcf) (void*,char);$/;"	t	typeref:typename:void (*)(void *,char)	file:
putchw	src/libshado/printf.c	/^static void putchw(void* putp,putcf putf,int n, char z, char* bf)$/;"	f	typeref:typename:void	file:
putcp	src/libshado/printf.c	/^static void putcp(void* p,char c)$/;"	f	typeref:typename:void	file:
sleep_sec	src/libshado/sys.c	/^void sleep_sec (int sec) {$/;"	f	typeref:typename:void
sprintf	src/include/printf.h	/^#define sprintf /;"	d
stdout_putf	src/libshado/printf.c	/^static putcf stdout_putf = NULL;$/;"	v	typeref:typename:putcf	file:
stdout_putp	src/libshado/printf.c	/^static void* stdout_putp = NULL;$/;"	v	typeref:typename:void *	file:
str_cpy	src/libshado/util.c	/^void str_cpy (char *dest, char *src) {$/;"	f	typeref:typename:void
str_eq	src/libshado/util.c	/^int str_eq (char *a, char *b) {$/;"	f	typeref:typename:int
str_len	src/libshado/util.c	/^unsigned long str_len (char *s) {$/;"	f	typeref:typename:unsigned long
str_pos	src/libshado/util.c	/^int str_pos (char *s, char c) {$/;"	f	typeref:typename:int
str_print	src/libshado/util.c	/^void str_print (char *s) {$/;"	f	typeref:typename:void
str_to_int	src/libshado/util.c	/^int str_to_int (char *s) {$/;"	f	typeref:typename:int
sys_nanosleep	src/libshado/sys.c	/^unsigned long sys_nanosleep (struct timespec *req, struct timespec *rem) {$/;"	f	typeref:typename:unsigned long
sys_reboot	src/libshado/sys.c	/^unsigned long sys_reboot () {$/;"	f	typeref:typename:unsigned long
sys_select	src/libshado/sys.c	/^int sys_select (int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds,$/;"	f	typeref:typename:int
sys_waitid	src/libshado/sys.c	/^int sys_waitid(idtype_t idtype, id_t id, siginfo_t *infop, int options) {$/;"	f	typeref:typename:int
tfp_format	src/libshado/printf.c	/^void tfp_format(void* putp,putcf putf,char *fmt, va_list va)$/;"	f	typeref:typename:void
tfp_printf	src/libshado/printf.c	/^void tfp_printf(char *fmt, ...)$/;"	f	typeref:typename:void
tfp_sprintf	src/libshado/printf.c	/^void tfp_sprintf(char* s,char *fmt, ...)$/;"	f	typeref:typename:void
time	src/lash/lash.c	/^    struct timeval time;$/;"	m	struct:input_event	typeref:struct:timeval	file:
type	src/lash/lash.c	/^    unsigned short type;$/;"	m	struct:input_event	typeref:typename:unsigned short	file:
ui2a	src/libshado/printf.c	/^static void ui2a(unsigned int num, unsigned int base, int uc,char * bf)$/;"	f	typeref:typename:void	file:
uli2a	src/libshado/printf.c	/^static void uli2a(unsigned long int num, unsigned int base, int uc,char * bf)$/;"	f	typeref:typename:void	file:
value	src/include/libdrm.h	/^    uint64_t value;$/;"	m	struct:libdrm_get_cap	typeref:typename:uint64_t
value	src/lash/lash.c	/^    unsigned int value;$/;"	m	struct:input_event	typeref:typename:unsigned int	file:
x	src/lash/lash.c	/^    int x;$/;"	m	struct:mouse_pos_info	typeref:typename:int	file:
y	src/lash/lash.c	/^    int y;$/;"	m	struct:mouse_pos_info	typeref:typename:int	file:
